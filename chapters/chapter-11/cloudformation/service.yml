AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a Docker container within a previously created VPC. Requires a running network stack.
Parameters:
  NetworkStackName:
    Type: String
    Description: The name of the networking stack that
      these resources are put into.
  ServiceName:
    Type: String
    Description: A human-readable name for the service.
  ImageUrl:
    Type: String
    Description: The url of a docker image that will handle incoming traffic.
  ContainerPort:
    Type: Number
    Default: 80
    Description: The port number the application inside the docker container
      is binding to.
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU.
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container.
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run.
  DatabaseStackName:
    Type: String
    Description: The name of the database stack.

Resources:

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref 'ServiceName'
      RetentionInDays: 1

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Ref 'ServiceName'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref 'ServiceName'
          Environment:
            - Name: COGNITO_USER_POOL_ID
              Value:
                Fn::ImportValue: 'UserPool::Id'
            - Name: COGNITO_CLIENT_ID
              Value:
                Fn::ImportValue: 'UserPoolClient::Id'
            - Name: COGNITO_CLIENT_SECRET
              Value:
                !Ref 'UserPoolClientSecret'
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: SPRING_DATASOURCE_URL
              Value: !Join
                - ''
                - - 'jdbc:postgresql://'
                  - Fn::ImportValue: !Join [':', [!Ref 'DatabaseStackName', 'EndpointAddress']]
                  - ':'
                  - Fn::ImportValue: !Join [':', [!Ref 'DatabaseStackName', 'EndpointPort']]
                  - '/'
                  - Fn::ImportValue: !Join [':', [!Ref 'DatabaseStackName', 'DBName']]
            - Name: SPRING_DATASOURCE_USERNAME
              Value: !Join
                - ''
                - - '{{resolve:secretsmanager:'
                  - Fn::ImportValue: !Join [':', [!Ref 'DatabaseStackName', 'Secret']]
                  - ':SecretString:username}}'
            - Name: SPRING_DATASOURCE_PASSWORD
              Value: !Join
                - ''
                - - '{{resolve:secretsmanager:'
                  - Fn::ImportValue: !Join [':', [!Ref 'DatabaseStackName', 'Secret']]
                  - ':SecretString:password}}'

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'ECSSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'PublicSubnet']]
      TaskDefinition: !Ref 'TaskDefinition'
