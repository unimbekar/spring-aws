AWSTemplateFormatVersion: '2010-09-09'

Description: Combines all stacks necessary to deploy an application.

Parameters:

  RegistryStackName:
    Type: String
    Description: The name of the ECR registry stack.

  # Messaging stack parameters
  MessagingStackTemplateUrl:
    Type: String
    Description: URL to the messaging stack template in an S3 bucket.

  # network stack parameters
  NetworkStackTemplateUrl:
    Type: String
    Description: URL to the network stack template in an S3 bucket.

  # Service stack parameters
  ServiceStackTemplateUrl:
    Type: String
    Description: URL to the service stack template in an S3 bucket.
  ServiceStackImageUrl:
    Type: String
    Description: URL to the Docker image
  ServiceStackUserPoolClientSecret:
    Type: String
    Description: The client secret to access the Cognito UserPool.

  # Database stack parameters
  DatabaseStackTemplateUrl:
    Type: String
    Description: URL to the database stack template in an S3 bucket.
  DatabaseStackDBName:
    Type: String
    Description: The name of the database that is created within the PostgreSQL instance.
  DatabaseStackDBUsername:
    Type: String
    Description: The master user name for the PostgreSQL instance.

Resources:

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref 'NetworkStackTemplateUrl'

  MessagingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref 'MessagingStackTemplateUrl'

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref 'DatabaseStackTemplateUrl'
      Parameters:
        NetworkStackName: !GetAtt NetworkStack.Outputs.StackName
        DBName: !Ref 'DatabaseStackDBName'
        DBUsername: !Ref 'DatabaseStackDBUsername'

  ServiceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref 'ServiceStackTemplateUrl'
      Parameters:
        NetworkStackName: !GetAtt NetworkStack.Outputs.StackName
        RegistryStackName: !Ref 'RegistryStackName'
        ServiceName: 'stratospheric-todo-app'
        HealthCheckPath: '/health'
        HealthCheckPort: 8080
        HealthCheckIntervalSeconds: 180
        ImageUrl: !Ref 'ServiceStackImageUrl'
        ContainerPort: 8080
        ContainerCpu: 256
        ContainerMemory: 512
        Path: '*'
        DesiredCount: 2
        UserPoolClientSecret: !Ref 'ServiceStackUserPoolClientSecret'
        DatabaseStackName: !GetAtt DatabaseStack.Outputs.StackName
