service: email-utilities

plugins:
  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: java11
  stage: dev
  region: eu-central-1
  timeout: 10
  memorySize: 1024
  logRetentionInDays: 7
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::${self:custom.emailBucket}/*
        - !Join [ '', [ 'arn:aws:s3:::', !Ref ServerlessDeploymentBucket, '/*' ] ]
    - Effect: Allow
      Action:
        - ses:SendRawEmail
        - ses:SendEmail
      Resource:
        - arn:aws:ses:eu-west-1:221875718260:identity/*

custom:
  emailBucket: stratospheric-emails
  alerts:
    stages:
      - dev
    definitions:
      functionErrors:
        period: 3600 # evaluate every 60 minutes -> emails don't come regularly
    topics:
      alarm:
        topic: ${self:service}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: ${ssm:/email-philip}
    alarms:
      - functionErrors
package:
  artifact: build/distributions/email-1.0.0.zip

functions:
  email-forwarding:
    handler: dev.stratospheric.email.ForwardingHandler
    events:
      - s3:
          bucket: ${self:custom.emailBucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: emails-received/
    environment:
      EMAIL_BJOERN: ${ssm:/email-bjoern}
      EMAIL_TOM: ${ssm:/email-tom}
      EMAIL_PHILIP: ${ssm:/email-philip}

resources:
  Resources:
    EmailBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.emailBucket}
        PolicyDocument:
          Statement:
            - Sid: Allow SES to store received emails
              Action:
                - s3:PutObject
              Effect: Allow
              Resource: arn:aws:s3:::${self:custom.emailBucket}/*
              Principal:
                Service: ses.amazonaws.com
              Condition:
                StringEquals:
                  aws:Referer: 221875718260
